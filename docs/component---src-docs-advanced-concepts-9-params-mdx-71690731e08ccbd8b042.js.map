{"version":3,"sources":["webpack:///../src/docs/Advanced Concepts/9.params.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAMaA,G,UAAe,S,yNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,WADR,YAGA,uBAAK,gCAAMC,WAAW,OAAU,CAC5B,UAAa,kBADZ,8jD,uNAwDTJ,EAAWK,gBAAiB","file":"component---src-docs-advanced-concepts-9-params-mdx-71690731e08ccbd8b042.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/chrissie/Desktop/docz-app-with-algolia-search/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"-params\"\n    }}>{`# PARAMS`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`task - <Object>\ntasks - <Array of task>\nrequest - <Object>\ncallback - <Object>\nupdateStateCallback - <Function>\nsubKey - <Array> accessing deep object\ndeleteKey - <Array> of keys to delete\nfilter - <Array> storing data based on filter\nfilter - <Array> update n number of filters at single task\neg: [['filter1'],['filter2']]\nid - <Array> || <string> || <number>\nkey - id Key example: 'user_id' <String>\nclearData - clearing data <Boolean> for infinite\nisAppendTop - for storing data in top for infinite\nlimit - <Number> for infinite\nquery - <Object> adding query parameters to url\nparams - <Object> params for aps eg:api/:id\nsuccessCallback - <Function> <{res : <Object>,data<Object>,status, message}>\nerrorCallback - <Function> <{error : <Error instance>,errorData<Object>,status, message}>\nupdateCallback - <Function> <Object>\npayload - <Function>\nON_SUCCESS - storing data based on success data or loaded data\nON_UNMOUNT - reset the data\nON_ERROR - setting the loader false and error data\nApi End Point Params -\n* url,\n* method,\n* responseMessageKey,\n* responseDataKey,\n* responseStatusKey,\n* responseStatusCodeKey,\n* errorStatusKey,\n* errorMessageKey,\n* errorDataKey,\n* errorHandlerStatusCode,\n* effect - takeLatest default || 'every' for takeEvery\n\nGetData - returns\n* data - <Object>\n* loader - <Boolean>\n* lastUpdated - <Boolean>\n* isInfinite - <Boolean>\n* isInfiniteEnd - <Boolean>\n\nGetData - params\n* Object(data) - <Object>\n* defaultValue - <Array || Object || Boolean || null || String >\n* loader - <Boolean>\n* filter - <Array>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}