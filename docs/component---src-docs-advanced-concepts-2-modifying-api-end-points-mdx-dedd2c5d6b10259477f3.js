(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{Mz2c:function(n,e,t){"use strict";t.r(e),t.d(e,"_frontmatter",(function(){return i})),t.d(e,"default",(function(){return u}));var a=t("Fcif"),r=t("+I+c"),s=(t("mXGw"),t("/FXl")),o=t("TjRS"),i=(t("aD51"),{});void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/Advanced Concepts/2.modifying-api-end-points.mdx"}});var c={_frontmatter:i},d=o.a;function u(n){var e=n.components,t=Object(r.a)(n,["components"]);return Object(s.b)(d,Object(a.a)({},c,t,{components:e,mdxType:"MDXLayout"}),Object(s.b)("h2",{id:"-modifying-api-end-points-reducer-constants"},"# Modifying api end points reducer constants"),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript",metastring:"{.line-numbers}","{.line-numbers}":!0}),'import {\n  HOC,\n  commonConstants,\n  store,\n  newObject,\n} from "react-boilerplate-redux-saga-hoc";\nconst { CALL, ON_SUCCESS } = commonConstants;\nconst reducer = ({\n  constants,\n  successData,\n  restSuccessData,\n  payload,\n  query,\n  state,\n  params,\n  restPayload,\n  loadingStatus,\n  statusCode,\n  type,\n  reset,\n  newState,\n  method,\n  statusMessage,\n  errorData,\n  restErrorData,\n  resetState,\n  initialState,\n  commonHandler,\n  commmonErrorHandler,\n  defaultReducerHandler,\n}) => {\n  switch (type) {\n    case "RESET":\n      switch (method) {\n        case ON_SUCCESS:\n          return newObject(state, resetState);\n        default:\n          return state;\n      }\n    case constants.VERIFY_OTP_API[CALL]:\n      switch (method) {\n        case ON_SUCCESS:\n          return newState(({ [type]: Data }) => ({\n            profile: successData,\n            isLoggedIn: !!successData.data.mobile_number,\n            [type]: newObject(Data, {\n              lastUpdated: generateTimeStamp(),\n              data: successData,\n            }),\n          }));\n        default:\n          return defaultReducerHandler(); // for handling others such as Error\n      }\n    case authenticationConstants.USER_PROFILE_API[CALL]:\n      switch (method) {\n        case ON_SUCCESS:\n          return newState(({ profile, [type]: Data }) => ({\n            authorization: true,\n            isLoggedIn: !!successData.name,\n            profile: newObject(profile, successData),\n            [type]: newObject(Data, commonHandler()), // you can use commonHandler for handling task by itsself\n          }));\n        case ON_ERROR:\n          return newObject(state, ({ [type]: Data }) => ({\n            isError: true,\n            isLoggedIn: false,\n            [type]: newObject(Data, commmonErrorHandler()), // you can use commmonErrorHandler for handling error by itsself\n          }));\n        case ON_UNMOUNT: {\n          return reset(); // This is just an example don\'t do this if it is not required.Reset will be handled by itsself\n        }\n        default:\n          return state;\n      }\n    default:\n      return defaultReducerHandler();\n  }\n};\n\nconst AuthenticationHOC = HOC({\n  initialState: {\n    profile: {},\n  },\n  apiEndPoints: {\n    TEST_API: {},\n    VERIFY_OTP_API: {\n      url: `users/verify-otp/`,\n      method: "POST",\n    },\n    REGISTER_API: {\n      url: `users/user-signup/`,\n      method: "POST",\n    },\n    dontReset: {\n      REGISTER_API,\n    },\n  },\n  reducer,\n  constantReducer: ({\n    type,\n    state,\n    action,\n    constants,\n    initialState,\n    resetState,\n  }) => {\n    if (type === "LOGOUT")\n      return action.payload.resetEntireState ? initialState : resetState; // resetState wont reset if you specify the api in (dontReset) key while creating hoc\n    return state;\n  },\n  name: "Auth",\n});\n')))}void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/Advanced Concepts/2.modifying-api-end-points.mdx"}}),u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-advanced-concepts-2-modifying-api-end-points-mdx-dedd2c5d6b10259477f3.js.map