{"version":3,"sources":["webpack:///../src/docs/Handlers/6.deletekeyhandler.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAMaA,G,UAAe,S,0NAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,sBADR,sBAGA,uBAAK,gCAAMC,WAAW,OAAU,IAA3B,2JAGL,iBAAQ,CACN,GAAM,sCADR,uCAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,sBACb,WAAc,kBACd,mBAAmB,IAHlB,6VAkBL,iBAAQ,CACN,GAAM,mCADR,oCAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,sBACb,WAAc,kBACd,mBAAmB,IAHlB,kXAmBL,iBAAQ,CACN,GAAM,yCADR,0CAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,sBACb,WAAc,kBACd,mBAAmB,IAHlB,oZAmBL,iBAAQ,CACN,GAAM,mCADR,oCAGA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,mEAGL,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,sBACb,WAAc,kBACd,mBAAmB,IAHlB,2aAoBL,iBAAQ,CACN,GAAM,sCADR,uCAGA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,8QAML,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,sBACb,WAAc,kBACd,mBAAmB,IAHlB,w2D,wNAsETJ,EAAWK,gBAAiB","file":"component---src-docs-handlers-6-deletekeyhandler-mdx-abadbf079000bc566c35.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/ats/Desktop/cartoon-mango/docz-app-with-algolia-search/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"delete-key-handler\"\n    }}>{`Delete Key Handler`}</h1>\n    <pre><code parentName=\"pre\" {...{}}>{`  Note:\n  - Delete Key handler is slightly different from Delete handler, but it will delete only particular key in an object or an array of object\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"-delete-key-handler-without-filter\"\n    }}>{`# Delete Key Handler without filter`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"metastring\": \"{.line-numbers}\",\n        \"{.line-numbers}\": true\n      }}>{`import { HOC, commonConstants, store } from \"react-boilerplate-redux-saga-hoc\";\n\nconst { ON_SUCCESS } = commonConstants;\nconst { DEMO_API_CONFIGURATION_CUSTOM_TASK } = props;\n\nDEMO_API_CONFIGURATION_CUSTOM_TASK(ON_SUCCESS, {\n  task: {\n    name: \"Delete-Key-Handler\",\n    id: [1, 2],\n    key: \"id\",\n    deleteKey: [\"age\"],\n  },\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"-delete-key-handler-with-filter\"\n    }}>{`# Delete Key Handler with filter`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"metastring\": \"{.line-numbers}\",\n        \"{.line-numbers}\": true\n      }}>{`import { HOC, commonConstants, store } from \"react-boilerplate-redux-saga-hoc\";\n\nconst { ON_SUCCESS } = commonConstants;\nconst { DEMO_API_CONFIGURATION_CUSTOM_TASK } = props;\n\nDEMO_API_CONFIGURATION_CUSTOM_TASK(ON_SUCCESS, {\n  task: {\n    name: \"Delete-Key-Handler\",\n    id: [1, 2],\n    key: \"id\",\n    deleteKey: [\"age\"],\n  },\n  filter: [\"name\"],\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"-delete-key-handler-with-multi-filter\"\n    }}>{`# Delete Key Handler with Multi-filter`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"metastring\": \"{.line-numbers}\",\n        \"{.line-numbers}\": true\n      }}>{`import { HOC, commonConstants, store } from \"react-boilerplate-redux-saga-hoc\";\n\nconst { ON_SUCCESS } = commonConstants;\nconst { DEMO_API_CONFIGURATION_CUSTOM_TASK } = props;\n\nDEMO_API_CONFIGURATION_CUSTOM_TASK(ON_SUCCESS, {\n  task: {\n    name: \"Delete-Key-Handler\",\n    id: [1, 2],\n    key: \"id\",\n    deleteKey: [\"age\"],\n  },\n  filter: [[\"filter-1\"], [\"filter-2\"], [\"filter-2\"]],\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"-delete-key-handler-with-subkey\"\n    }}>{`# Delete Key Handler with Subkey`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`Note:\n- sub key for handling sub level of data in an object\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"metastring\": \"{.line-numbers}\",\n        \"{.line-numbers}\": true\n      }}>{`import { HOC, commonConstants, store } from \"react-boilerplate-redux-saga-hoc\";\n\nconst { ON_SUCCESS } = commonConstants;\nconst { DEMO_API_CONFIGURATION_CUSTOM_TASK } = props;\n\nDEMO_API_CONFIGURATION_CUSTOM_TASK(ON_SUCCESS, {\n  task: {\n    name: \"Delete-Key-Handler\",\n    subKey: [\"data\"],\n    id: [1, 2],\n    key: \"id\",\n    deleteKey: [\"age\"],\n  },\n  filter: [[\"filter-1\"], [\"filter-2\"], [\"filter-2\"]],\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"-delete-key-handler-function---api\"\n    }}>{`# Delete Key Handler Function - Api`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{` Important:\n- The code below are the built in handler function.\n- Don't copy and paste this handler, it is already available with this hoc.\n- You will learn how to create your own custom handler in below.\n- If you want to customize this handler you can do it.\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"metastring\": \"{.line-numbers}\",\n        \"{.line-numbers}\": true\n      }}>{`import {\n  generateTimeStamp,\n  updateIn,\n  getIn,\n  Safe,\n} from \"react-boilerplate-redux-saga-hoc\";\n\nconst deletedData = (obj, keyArray) =>\n  Object.keys(obj).reduce(\n    (acc, curr) =>\n      (keyArray.includes(curr) && acc) || { ...acc, [curr]: obj[curr] },\n    {}\n  );\n\nexport const deleteKeyHandler = ({\n  task: { key, id, deleteKey = [], subKey = [] } = {},\n  callback: { updateCallback } = {},\n  successData = {},\n}) => ({ data = {} } = {}) => ({\n  data:\n    subKey.length > 0\n      ? updateIn(\n          {\n            ...data,\n            ...successData,\n            [subKey[0]]: data[subKey[0]],\n          },\n          subKey,\n          (_Data) =>\n            updateCallback\n              ? updateCallback(_Data, successData) || _Data\n              : (!Array.isArray(_Data) && deletedData(_Data, deleteKey)) ||\n                (Array.isArray(id) &&\n                  _Data.reduce(\n                    (acc, curr) =>\n                      id.includes(curr[key])\n                        ? acc.concat([deletedData(curr, deleteKey)])\n                        : acc.concat([curr]),\n                    []\n                  )) ||\n                _Data.map((_data) =>\n                  _data[key] === id ? deletedData(_data, deleteKey) : _data\n                )\n        )\n      : updateCallback\n      ? updateCallback(data, successData) || data\n      : (!Array.isArray(data) && deletedData(data, deleteKey)) ||\n        (Array.isArray(id) &&\n          data.reduce(\n            (acc, curr) =>\n              id.includes(curr[key])\n                ? acc.concat([deletedData(curr, deleteKey)])\n                : acc.concat([curr]),\n            []\n          )) ||\n        data.map((_data) =>\n          _data[key] === id ? deletedData(_data, deleteKey) : _data\n        ),\n  lastUpdated: generateTimeStamp(),\n  isError: false,\n});\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}