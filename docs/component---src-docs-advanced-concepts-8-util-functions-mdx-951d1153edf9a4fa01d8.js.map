{"version":3,"sources":["webpack:///../src/docs/Advanced Concepts/8.util-functions.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAMaA,G,UAAe,S,iOAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,kBADR,kBAGA,iBAAQ,CACN,GAAM,kBADR,mBAGA,uBAAK,gCAAMC,WAAW,OAAU,IAA3B,6EAGL,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,sBACb,WAAc,kBACd,mBAAmB,IAHlB,oYAgBL,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,8OAIL,iBAAQ,CACN,GAAM,yBADR,0BAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,sBACb,WAAc,kBACd,mBAAmB,IAHlB,+bAmBL,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,sBACb,WAAc,kBACd,mBAAmB,IAHlB,+gB,+NA0BTJ,EAAWK,gBAAiB","file":"component---src-docs-advanced-concepts-8-util-functions-mdx-951d1153edf9a4fa01d8.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/ats/Desktop/cartoon-mango/docz-app-with-algolia-search/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"util-functions\"\n    }}>{`Util Functions`}</h1>\n    <h2 {...{\n      \"id\": \"-safe-function\"\n    }}>{`# Safe Function`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`Note:\n-This function will be used for accessing deep level of object.\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"metastring\": \"{.line-numbers}\",\n        \"{.line-numbers}\": true\n      }}>{`import { Safe } from 'react-boilerplate-redux-saga-hoc';\n\nExample 1:\nconst defaultValue = '';\nconst object = { name: { name: { age: { person: 'jfjj' } } } }\nconst Person =  Safe(object , '.name.name.age.person', defaultValue);\n\nExample 2:\nconst callback = (person) => return person + person;\nconst Person = Safe(object , '.name.name.age.person', defaultValue , callback)\n\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`   Note:\n -defaultValue is typeof value should return ,if the value return array by default safe function will return default value.\n -if don't pass any value in third parameter it return the ececuted value otherwise return null.\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"-other-util-functions\"\n    }}>{`# Other Util functions`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"metastring\": \"{.line-numbers}\",\n        \"{.line-numbers}\": true\n      }}>{`import { cloneObject , newObject } from 'react-boilerplate-redux-saga-hoc';\n\nExample 1:\nconst oldObject = { name: '' };\nconst newObject = { age: '' };\nconst obj = cloneObject(oldObject, newObject)\nobj returns {  name: '', age: '' }\n\nExample 2:\nconst object = { name: '',profile: { name : '' } };\nconst obj = newObject(object,({ profile }) => ({\n   profile: newObject(profile, { age: 20 })\n}))\nobj returns {  name: '', age: 20 }\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"metastring\": \"{.line-numbers}\",\n        \"{.line-numbers}\": true\n      }}>{`import {\n  cloneObject,\n  newObject,\n  deleteIn,\n  getIn,\n  objectEquals,\n  setIn,\n  updateIn,\n  generateTimeStamp,\n} from \"react-boilerplate-redux-saga-hoc\";\nconst data = {};\nconsole.log(getIn(data, [\"data\", \"age\"])); // returns data or undefined\nconst deletedData = deleteIn(data, [\"data\", \"age\"]); // returns data\nconst newdata = setIn(data, [\"data\", \"age\"], 20);\nconst updatedData = updateIn(data, [\"data\", \"age\"], () => 30);\nconsole.log(generateTimeStamp());\nconsole.log(objectEquals({}, {}));\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}