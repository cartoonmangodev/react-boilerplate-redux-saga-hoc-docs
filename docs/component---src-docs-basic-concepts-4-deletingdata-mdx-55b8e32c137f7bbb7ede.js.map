{"version":3,"sources":["webpack:///../src/docs/Basic Concepts/4.deletingdata.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAMaA,G,UAAe,S,4NAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,iBADR,iBAGA,iBAAQ,CACN,GAAM,iCADR,kCAGA,uBAAK,gCAAMC,WAAW,OAAU,IAA3B,0IAGL,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,idAyBL,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,sEAGL,iBAAQ,CACN,GAAM,8BADR,+BAGA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,2IAGL,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,0uBAiCL,iBAAQ,CACN,GAAM,6CADR,8CAGA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,yIAGL,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,gUAeL,iBAAQ,CACN,GAAM,4BADR,6BAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,8UAgBL,+BAAc,6BAAGA,WAAW,KAAQ,CAChC,KAAQ,4FADE,uC,0NAOlBJ,EAAWK,gBAAiB","file":"component---src-docs-basic-concepts-4-deletingdata-mdx-55b8e32c137f7bbb7ede.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/ats/Desktop/cartoon-mango/docz-app-with-algolia-search/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"deleting-data\"\n    }}>{`Deleting Data`}</h1>\n    <h2 {...{\n      \"id\": \"-deleting-data-by-calling-api\"\n    }}>{`# Deleting data by calling api`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`   Note:\n -Data will be deleted automatically in the reducer and also it handles all the states..such as error,infinte,loader..etc\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const BASE_URL = \"https://example.com/\";\n\nconst DEMO_API_CONFIGURATION = {\n  url: ({ id }) => \\`\\${BASE_URL}user/\\${id}\\`,\n  method: \"DELETE\",\n  responseStatusCode: [900],\n  responseStatusCodeKey: \"code\",\n  responseDataKey: \"data\",\n  responseMessageKey: \"status\",\n  errorMessageKey: \"error\",\n};\n\nDEMO_API_CONFIGURATION_CALL({\n  task: {\n    name: \"Delete-Handler\",\n    key: \"id\",\n    id: [2],\n  },\n  request: {\n    params: { id: 2 },\n  },\n});\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`   Note:\n   -It will remove that particular object in an array\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"-deleting-key-in-an-object\"\n    }}>{`# Deleting key in an object`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`   Note:\n -It is almost similar to update, but instead of updating particular key it will delete the particular key from the object\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const BASE_URL = \"https://example.com/\";\n\nconst DEMO_API_CONFIGURATION = {\n  url: ({ id }) => \\`\\${BASE_URL}user/\\${id}\\`,\n  method: \"DELETE\",\n  responseStatusCode: [900],\n  responseStatusCodeKey: \"code\",\n  responseDataKey: \"data\",\n  responseMessageKey: \"status\",\n  errorMessageKey: \"error\",\n};\n\nDEMO_API_CONFIGURATION_CALL({\n  task: {\n    name: \"Delete-Key-Handler\",\n    id: [1, 2, 3],\n    key: \"id\",\n    deleteKey: [\"name\", \"age\"],\n  },\n  request: {\n    params: { id: 1 },\n  },\n});\n/* \nExample:\n\ndata = [ { id: 1, name: 'name1',age: '13',gender: 'male' },{ id: 1, name: 'name1',age: '12',gender: 'female' }]\nAfter executing task:\ndata = [ { id: 1, gender: 'male' },{ id: 2, gender: 'female' }]\n*/\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"-manually-deleting-by-calling-custom-task\"\n    }}>{`# Manually Deleting by calling custom task`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`     Note:\n   -Calling custom task will allow us to manipulate data without calling any api..such as adding count,linit,skip..etc\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { HOC, commonConstants, store } from \"react-boilerplate-redux-saga-hoc\";\n\nconst { ON_SUCCESS } = commonConstants;\nconst { DEMO_API_CONFIGURATION_CUSTOM_TASK } = props;\n\nDEMO_API_CONFIGURATION_CUSTOM_TASK(ON_SUCCESS, {\n  task: {\n    name: \"Delete-Handler\",\n    id: [1, 2],\n    key: \"id\",\n  },\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"-getting-data-from-store\"\n    }}>{`# Getting Data from store`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { useMemo } from \"react\";\nimport { useQuery } from \"react-boilerplate-redux-saga-hoc\";\nconst {\n  Auth_hoc: {\n    reducerName,\n    reducerConstants: { DEMO_API_CONFIGURATION },\n  },\n} = props;\n\nconst { loader, data, lastUpdated, isInfinite, infiniteEnd } = useQuery(\n  reducerName,\n  DEMO_API_CONFIGURATION\n);\n`}</code></pre>\n    <p>{`Next - `}<a parentName=\"p\" {...{\n        \"href\": \"/react-boilerplate-redux-saga-hoc-docs/docs/basic-concepts/adding-data-based-on-filters\"\n      }}>{`Adding Data based on filters`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}