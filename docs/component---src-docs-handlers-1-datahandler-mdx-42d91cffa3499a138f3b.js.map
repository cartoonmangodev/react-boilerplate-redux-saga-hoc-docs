{"version":3,"sources":["webpack:///../src/docs/Handlers/1.datahandler.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"0PAMaA,G,UAAe,S,qNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,gBADR,gBAGA,iBAAQ,CACN,GAAM,gCADR,iCAGA,uBAAK,gCAAMC,WAAW,OAAU,CAC5B,UAAa,sBACb,WAAc,kBACd,mBAAmB,IAHlB,6RAeL,iBAAQ,CACN,GAAM,6BADR,8BAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,sBACb,WAAc,kBACd,mBAAmB,IAHlB,kTAgBL,iBAAQ,CACN,GAAM,mCADR,oCAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,sBACb,WAAc,kBACd,mBAAmB,IAHlB,oVAgBL,iBAAQ,CACN,GAAM,uBADR,wBAGA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,uSAOL,iBAAQ,CACN,GAAM,gCADR,iCAGA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,iRAML,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,sBACb,WAAc,kBACd,mBAAmB,IAHlB,w9C,mNAuDTJ,EAAWK,gBAAiB","file":"component---src-docs-handlers-1-datahandler-mdx-42d91cffa3499a138f3b.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/ats/Desktop/cartoon-mango/docz-app-with-algolia-search/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"data-handler\"\n    }}>{`Data Handler`}</h1>\n    <h2 {...{\n      \"id\": \"-data-handler-without-filter\"\n    }}>{`# Data Handler without filter`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"metastring\": \"{.line-numbers}\",\n        \"{.line-numbers}\": true\n      }}>{`import { HOC, commonConstants, store } from \"react-boilerplate-redux-saga-hoc\";\n\nconst { ON_SUCCESS } = commonConstants;\nconst { DEMO_API_CONFIGURATION_CUSTOM_TASK } = props;\n\nDEMO_API_CONFIGURATION_CUSTOM_TASK(ON_SUCCESS, {\n  task: {\n    name: \"Data-Handler\",\n  },\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"-data-handler-with-filter\"\n    }}>{`# Data Handler with filter`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"metastring\": \"{.line-numbers}\",\n        \"{.line-numbers}\": true\n      }}>{`import { HOC, commonConstants, store } from \"react-boilerplate-redux-saga-hoc\";\n\nconst { ON_SUCCESS } = commonConstants;\nconst { DEMO_API_CONFIGURATION_CUSTOM_TASK } = props;\n\nDEMO_API_CONFIGURATION_CUSTOM_TASK(ON_SUCCESS, {\n  task: {\n    name: \"Data-Handler\",\n  },\n  filter: [\"name\"],\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"-data-handler-with-multi-filter\"\n    }}>{`# Data Handler with Multi-filter`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"metastring\": \"{.line-numbers}\",\n        \"{.line-numbers}\": true\n      }}>{`import { HOC, commonConstants, store } from \"react-boilerplate-redux-saga-hoc\";\n\nconst { ON_SUCCESS } = commonConstants;\nconst { DEMO_API_CONFIGURATION_CUSTOM_TASK } = props;\n\nDEMO_API_CONFIGURATION_CUSTOM_TASK(ON_SUCCESS, {\n  task: {\n    name: \"Data-Handler\",\n  },\n  filter: [[\"filter-1\"], [\"filter-2\"], [\"filter-2\"]],\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"-things-to-remember\"\n    }}>{`# Things to Remember`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{` -Adding multiple filters will create multiple copy of the same data.\n-It will helps to handle different types of data in same api..such as variable kind of filters.\n\n Note:\n -Data-handler is default handler.\n -No need specify the handler if you want to execute a data  handler task.\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"-data-handler-function---api\"\n    }}>{`# Data Handler Function - Api`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`    Important:\n- The code below are the built in handler function.\n- Don't copy and paste this handler, it is already available with this hoc.\n- You will learn how to create your own custom handler in below.\n- If you want to customize this handler you can do it.\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"metastring\": \"{.line-numbers}\",\n        \"{.line-numbers}\": true\n      }}>{`import {\n  generateTimeStamp,\n  updateIn,\n  getIn,\n  Safe,\n} from \"react-boilerplate-redux-saga-hoc\";\n\nconst _checkIsNotObject = (data) =>\n  Object.prototype.toString.call(data) !== \"[object Object]\";\n\nexport const dataHandler = ({\n  task: { clearData, subKey = [] } = {},\n  callback: { updateCallback } = {},\n  successData = {},\n}) => ({ data: oldData = {} } = {}) => ({\n  data: (() => {\n    if (subKey.length > 0) {\n      const _oldCopyData = {\n        ...oldData,\n        ...successData,\n        [subKey[0]]: oldData[subKey[0]],\n      };\n      return updateIn(_oldCopyData, subKey, (_oldData) => {\n        if (clearData) return Safe(successData, \\`.\\${subKey.join(\".\")}\\`);\n        return updateCallback\n          ? updateCallback(_oldData, Safe(successData, \\`.\\${subKey.join(\".\")}\\`))\n          : _checkIsNotObject(Safe(successData, \\`.\\${subKey.join(\".\")}\\`)) ||\n            _checkIsNotObject(Safe(_oldData, \\`.\\${subKey.join(\".\")}\\`))\n          ? Safe(successData, \\`.\\${subKey.join(\".\")}\\`)\n          : newObject(_oldData, Safe(successData, \\`.\\${subKey.join(\".\")}\\`));\n      });\n    }\n    return updateCallback\n      ? updateCallback(oldData, successData)\n      : _checkIsNotObject(successData) ||\n        _checkIsNotObject(oldData) ||\n        clearData\n      ? successData\n      : newObject(oldData, successData);\n  })(),\n  error: false,\n  lastUpdated: generateTimeStamp(),\n  isInfinite: undefined,\n  infiniteEnd: undefined,\n  isError: false,\n});\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}