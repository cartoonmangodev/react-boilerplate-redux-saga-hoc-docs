{"version":3,"sources":["webpack:///../src/docs/Advanced Concepts/7.inject-saga-reducer-using-hook.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAMaA,G,UAAe,S,iPAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,wDADR,yDAGA,uBAAK,gCAAMC,WAAW,OAAU,IAA3B,sLAIL,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,sBACb,WAAc,kBACd,mBAAmB,IAHlB,qf,+OAkCTJ,EAAWK,gBAAiB","file":"component---src-docs-advanced-concepts-7-inject-saga-reducer-using-hook-mdx-624b67e879e691fe3be0.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/chrissie/Desktop/docz-app-with-algolia-search/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"-inject-saga-and-reducer-to-the-store-by-using-hooks\"\n    }}>{`# Inject saga and reducer to the store by using hooks`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`     Note:\n- By injecting reducer and saga you can able to create your own reducer and saga.\n- It helps in most of the scenarios such as polling,creating your own logic..etc\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"metastring\": \"{.line-numbers}\",\n        \"{.line-numbers}\": true\n      }}>{`import { takeLatest } from \"redux-saga/effects\";\nimport {\n  useInjectReducer,\n  useInjectSaga,\n} from \"react-boilerplate-redux-saga-hoc\";\n\nconst reducer = (state, action) => {\n  return state;\n};\nfunction* getRepos() {}\n\nconst saga = function*() {\n  yield takeLatest(\"LOAD_DATA\", getRepos);\n};\n\nconst key = \"Dashboard\";\n\nconst Dashboard = () => {\n  useInjectReducer({ key, reducer });\n  useInjectSaga({ key, saga });\n\n  return <div />;\n};\n\nexport default Dashboard;\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}