(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{ZkG2:function(e,n,a){"use strict";a.r(n),a.d(n,"_frontmatter",(function(){return c})),a.d(n,"default",(function(){return l}));var t=a("Fcif"),r=a("+I+c"),s=(a("mXGw"),a("/FXl")),o=a("TjRS"),c=(a("aD51"),{});void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/Basic Concepts/6.usingsubkey.mdx"}});var i={_frontmatter:c},d=o.a;function l(e){var n=e.components,a=Object(r.a)(e,["components"]);return Object(s.b)(d,Object(t.a)({},i,a,{components:n,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"using-subkey-for-accessing-deep-object"},"Using Subkey for accessing deep object"),Object(s.b)("h2",{id:"-adding-filters-in-deep-object"},"# Adding filters in Deep Object"),Object(s.b)("pre",null,Object(s.b)("code",Object(t.a)({parentName:"pre"},{}),"   Note:\n   -Incase you want to update deep object we can use subkey to navigate to that object\n")),Object(s.b)("pre",null,Object(s.b)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),'const BASE_URL = "https://example.com/";\n\nconst DEMO_API_CONFIGURATION = {\n  url: ({ id }) => `${BASE_URL}user/${id}`,\n  method: "GET",\n  responseStatusCode: [900],\n  responseStatusCodeKey: "code",\n  responseDataKey: "data",\n  responseMessageKey: "status",\n  errorMessageKey: "error",\n};\n\nDEMO_API_CONFIGURATION_CALL({\n  task: {\n    name: "Data-Handler",\n    subKey: ["data"],\n  },\n  request: {\n    params: { id: 2 },\n    query: { type: "name" },\n  },\n  filter: ["name"],\n});\n/*\nExample:\nresponseData = { data : { data: { id: 1 } } }\nstoreData = { name: { data: { id: 1 } }\n*/\n')),Object(s.b)("pre",null,Object(s.b)("code",Object(t.a)({parentName:"pre"},{}),"   Note:\n   - In this case it will store the data in an object with key 'name'\n")),Object(s.b)("h2",{id:"-deleting-key-in-an-deep-object"},"# Deleting key in an deep object"),Object(s.b)("pre",null,Object(s.b)("code",Object(t.a)({parentName:"pre"},{}),"   Note:\n   - It is almost similar to update, but instead of updating particular key it will delete the particular key from the object\n")),Object(s.b)("pre",null,Object(s.b)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),'const BASE_URL = "https://example.com/";\n\nconst DEMO_API_CONFIGURATION = {\n  url: ({ id }) => `${BASE_URL}user/${id}`,\n  method: "GET",\n  responseStatusCode: [900],\n  responseStatusCodeKey: "code",\n  responseDataKey: "data",\n  responseMessageKey: "status",\n  errorMessageKey: "error",\n};\n\nDEMO_API_CONFIGURATION_CALL({\n  task: {\n    name: "Delete-Key-Handler",\n    subKey: ["data"],\n    id: [1, 2, 3],\n    key: "id",\n    deleteKey: ["name", "age"],\n  },\n  request: {\n    query: { skip: 10, age: [20, 20] },\n    payload: { age: 20 }, // for post calls\n    paramsSerializer: { arrayFormat: "bracket" }, //default: none - refer query-string npm package\n    params: { id: 1 },\n  },\n  filter: ["name"],\n});\n/*\nExample:\n\ndata = { name :  { data : { data: [\n  { id: 1, name: \'name1\',age: \'13\',gender: \'male\' },\n  { id: 1, name: \'name1\',age: \'12\',gender: \'female\' }\n]}}}\n\nAfter executing task:\ndata = { name : { data : { data : [\n  { id: 1, gender: \'male\' },\n  { id: 2, gender: \'female\' }\n]}}}\n*/\n')),Object(s.b)("h2",{id:"-manually-deleting-subkey-data-by-calling-custom-task"},"# Manually Deleting Subkey Data by calling custom task"),Object(s.b)("pre",null,Object(s.b)("code",Object(t.a)({parentName:"pre"},{}),"   Note:\n   -Calling custom task will allow us to manipulate data without calling any api..such as adding count,limit,skip..etc\n")),Object(s.b)("pre",null,Object(s.b)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),'import { HOC, commonConstants, store } from "react-boilerplate-redux-saga-hoc";\n\nconst { ON_SUCCESS } = commonConstants;\nconst { DEMO_API_CONFIGURATION_CUSTOM_TASK } = props;\n\nDEMO_API_CONFIGURATION_CUSTOM_TASK(ON_SUCCESS, {\n  task: {\n    name: "Delete-Handler",\n    subKey: ["data"],\n    id: [1, 2],\n    key: "id",\n  },\n  filter: ["name"],\n});\n')),Object(s.b)("h2",{id:"-getting-filter-data-from-store"},"# Getting Filter Data from store"),Object(s.b)("h2",{id:""}),Object(s.b)("pre",null,Object(s.b)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),'import { useMemo } from "react";\nimport { useQuery } from "react-boilerplate-redux-saga-hoc";\nconst {\n  Auth_hoc: {\n    reducerName,\n    reducerConstants: { DEMO_API_CONFIGURATION },\n  },\n} = props;\n\nconst [nameDate, ageData] = useQuery(reducerName, [\n  { key: DEMO_API_CONFIGURATION, filter: ["name"] },\n  { key: DEMO_API_CONFIGURATION, filter: ["age"] },\n]);\n\n/**\nnameData returns \n{ loader, data, latUpdated, isInfinite, isInfiniteEnd } \nageData returns \n{ loader, data, latUpdated, isInfinite, isInfiniteEnd } \n**/\n')),Object(s.b)("p",null,"Next - ",Object(s.b)("a",Object(t.a)({parentName:"p"},{href:"/react-boilerplate-redux-saga-hoc-docs/docs/handlers/introduction"}),"How to use handlers")))}void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/Basic Concepts/6.usingsubkey.mdx"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-basic-concepts-6-usingsubkey-mdx-bc4c994d9b611ad6f1e1.js.map