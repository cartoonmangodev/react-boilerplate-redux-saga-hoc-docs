(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{MP8w:function(e,a,t){"use strict";t.r(a),t.d(a,"_frontmatter",(function(){return l})),t.d(a,"default",(function(){return d}));var n=t("Fcif"),r=t("+I+c"),o=(t("mXGw"),t("/FXl")),c=t("TjRS"),l=(t("aD51"),{});void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/Handlers/9.togglekeyhandler.mdx"}});var s={_frontmatter:l},i=c.a;function d(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(o.b)(i,Object(n.a)({},s,t,{components:a,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"toggle-key-handler"},"Toggle Key Handler"),Object(o.b)("h2",{id:"-toggle-key-handler-without-filter"},"# Toggle Key Handler without filter"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),'import { HOC, commonConstants, store } from "react-boilerplate-redux-saga-hoc";\n\nconst { ON_SUCCESS } = commonConstants;\nconst { DEMO_API_CONFIGURATION_CUSTOM_TASK } = props;\n\nDEMO_API_CONFIGURATION_CUSTOM_TASK(ON_SUCCESS, {\n  task: {\n    name: "Toggle-Key-Handler",\n    toggleKey: ["status"],\n  },\n});\n')),Object(o.b)("h2",{id:"-toggle-key-handler-with-filter"},"# Toggle Key Handler with filter"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),'import { HOC, commonConstants, store } from "react-boilerplate-redux-saga-hoc";\n\nconst { ON_SUCCESS } = commonConstants;\nconst { DEMO_API_CONFIGURATION_CUSTOM_TASK } = props;\n\nDEMO_API_CONFIGURATION_CUSTOM_TASK(ON_SUCCESS, {\n  task: {\n    name: "Toggle-Key-Handler",\n    toggleKey: ["status"],\n  },\n  filter: ["name"],\n});\n')),Object(o.b)("h2",{id:"-toggle-key-handler-with-multi-filter"},"# Toggle Key Handler with Multi-filter"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript",metastring:"{.line-numbers}","{.line-numbers}":!0}),'import { HOC, commonConstants, store } from "react-boilerplate-redux-saga-hoc";\n\nconst { ON_SUCCESS } = commonConstants;\nconst { DEMO_API_CONFIGURATION_CUSTOM_TASK } = props;\n\nDEMO_API_CONFIGURATION_CUSTOM_TASK(ON_SUCCESS, {\n  task: {\n    name: "Toggle-Key-Handler",,\n    toggleKey: [\'status\']\n  },\n  filter: [["filter-1"], ["filter-2"], ["filter-2"]],\n});\n')),Object(o.b)("h2",{id:"-things-to-remember"},"# Things to Remember"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{})," -Adding multiple filters will create multiple copy of the same ##.\n-It will helps to handle different types of ## in same api..such as variable kind of filters.\n")),Object(o.b)("h2",{id:"-toggle-key-handler-function---api"},"# Toggle Key Handler Function - Api"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{}),"    Important:\n- The code below are the built in handler function.\n- Don't copy and paste this handler, it is already available with this hoc.\n- You will learn how to create your own custom handler in below.\n- If you want to customize this handler you can do it.\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),'/* eslint-disable */\nimport { updateIn, newObject, generateTimeStamp } from "../helpers";\n\nconst toggleData = (obj, keyArray) =>\n  Object.keys(obj).reduce(\n    (acc, curr) => ({\n      ...acc,\n      [curr]: keyArray.includes(curr) ? !obj[curr] : obj[curr],\n    }),\n    {}\n  );\nexport const toggleKeyHandler = ({\n  task: { key, id, toggleKey = [], subKey = [] } = {},\n  callback: { updateCallback } = {},\n  successData = {},\n}) => ({ data = {} } = {}) => ({\n  data:\n    subKey.length > 0\n      ? updateIn(\n          {\n            ...data,\n            ...successData,\n            [subKey[0]]: data[subKey[0]],\n          },\n          subKey,\n          (_Data) =>\n            updateCallback\n              ? updateCallback(_Data, successData) || _Data\n              : (!Array.isArray(_Data) && toggleData(_Data, toggleKey)) ||\n                (Array.isArray(id) &&\n                  _Data.reduce(\n                    (acc, curr) =>\n                      id.includes(curr[key])\n                        ? acc.concat([toggleData(curr, toggleKey)])\n                        : acc.concat([curr]),\n                    []\n                  )) ||\n                _Data.map((_data) =>\n                  _data[key] === id ? toggleData(_data, toggleKey) : _data\n                )\n        )\n      : updateCallback\n      ? updateCallback(data, successData) || data\n      : (!Array.isArray(data) && toggleData(data, toggleKey)) ||\n        (Array.isArray(id) &&\n          data.reduce(\n            (acc, curr) =>\n              id.includes(curr[key])\n                ? acc.concat([toggleData(curr, toggleKey)])\n                : acc.concat([curr]),\n            []\n          )) ||\n        data.map((_data) =>\n          _data[key] === id ? toggleData(_data, toggleKey) : _data\n        ),\n  lastUpdated: generateTimeStamp(),\n  isError: false,\n});\n')))}void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/Handlers/9.togglekeyhandler.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-handlers-9-togglekeyhandler-mdx-2fafd083d91d8d975d89.js.map