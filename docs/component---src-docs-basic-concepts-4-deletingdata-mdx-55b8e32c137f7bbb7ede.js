(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{AjIr:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return c})),t.d(n,"default",(function(){return d}));var a=t("Fcif"),r=t("+I+c"),s=(t("mXGw"),t("/FXl")),o=t("TjRS"),c=(t("aD51"),{});void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/Basic Concepts/4.deletingdata.mdx"}});var l={_frontmatter:c},i=o.a;function d(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(s.b)(i,Object(a.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"deleting-data"},"Deleting Data"),Object(s.b)("h2",{id:"-deleting-data-by-calling-api"},"# Deleting data by calling api"),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{}),"   Note:\n -Data will be deleted automatically in the reducer and also it handles all the states..such as error,infinte,loader..etc\n")),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const BASE_URL = "https://example.com/";\n\nconst DEMO_API_CONFIGURATION = {\n  url: ({ id }) => `${BASE_URL}user/${id}`,\n  method: "DELETE",\n  responseStatusCode: [900],\n  responseStatusCodeKey: "code",\n  responseDataKey: "data",\n  responseMessageKey: "status",\n  errorMessageKey: "error",\n};\n\nDEMO_API_CONFIGURATION_CALL({\n  task: {\n    name: "Delete-Handler",\n    key: "id",\n    id: [2],\n  },\n  request: {\n    params: { id: 2 },\n  },\n});\n')),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{}),"   Note:\n   -It will remove that particular object in an array\n")),Object(s.b)("h2",{id:"-deleting-key-in-an-object"},"# Deleting key in an object"),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{}),"   Note:\n -It is almost similar to update, but instead of updating particular key it will delete the particular key from the object\n")),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const BASE_URL = "https://example.com/";\n\nconst DEMO_API_CONFIGURATION = {\n  url: ({ id }) => `${BASE_URL}user/${id}`,\n  method: "DELETE",\n  responseStatusCode: [900],\n  responseStatusCodeKey: "code",\n  responseDataKey: "data",\n  responseMessageKey: "status",\n  errorMessageKey: "error",\n};\n\nDEMO_API_CONFIGURATION_CALL({\n  task: {\n    name: "Delete-Key-Handler",\n    id: [1, 2, 3],\n    key: "id",\n    deleteKey: ["name", "age"],\n  },\n  request: {\n    params: { id: 1 },\n  },\n});\n/* \nExample:\n\ndata = [ { id: 1, name: \'name1\',age: \'13\',gender: \'male\' },{ id: 1, name: \'name1\',age: \'12\',gender: \'female\' }]\nAfter executing task:\ndata = [ { id: 1, gender: \'male\' },{ id: 2, gender: \'female\' }]\n*/\n')),Object(s.b)("h2",{id:"-manually-deleting-by-calling-custom-task"},"# Manually Deleting by calling custom task"),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{}),"     Note:\n   -Calling custom task will allow us to manipulate data without calling any api..such as adding count,linit,skip..etc\n")),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'import { HOC, commonConstants, store } from "react-boilerplate-redux-saga-hoc";\n\nconst { ON_SUCCESS } = commonConstants;\nconst { DEMO_API_CONFIGURATION_CUSTOM_TASK } = props;\n\nDEMO_API_CONFIGURATION_CUSTOM_TASK(ON_SUCCESS, {\n  task: {\n    name: "Delete-Handler",\n    id: [1, 2],\n    key: "id",\n  },\n});\n')),Object(s.b)("h2",{id:"-getting-data-from-store"},"# Getting Data from store"),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'import { useMemo } from "react";\nimport { useQuery } from "react-boilerplate-redux-saga-hoc";\nconst {\n  Auth_hoc: {\n    reducerName,\n    reducerConstants: { DEMO_API_CONFIGURATION },\n  },\n} = props;\n\nconst { loader, data, lastUpdated, isInfinite, infiniteEnd } = useQuery(\n  reducerName,\n  DEMO_API_CONFIGURATION\n);\n')),Object(s.b)("p",null,"Next - ",Object(s.b)("a",Object(a.a)({parentName:"p"},{href:"/react-boilerplate-redux-saga-hoc-docs/docs/basic-concepts/adding-data-based-on-filters"}),"Adding Data based on filters")))}void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/Basic Concepts/4.deletingdata.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-basic-concepts-4-deletingdata-mdx-55b8e32c137f7bbb7ede.js.map